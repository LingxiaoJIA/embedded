//////////////////////////////////////////////////////////////////////
// C++ header file generated by SpecC V2.2.1
// Design: edge_draw
// File:   edge_draw.h
// Time:   Sun Sep 20 16:48:31 2015
//////////////////////////////////////////////////////////////////////

// Note: User-defined include files are inlined in this file.

// Note: System-defined include files are inlined in this file.

#include <specc.h>

// named user-defined type declarations //////////////////////////////

#line 65 "/usr/include/gconv.h"
struct __gconv_loaded_object;

#line 20 "edge_draw.h"
struct __gconv_trans_data;
struct __gconv_step;
struct __gconv_step_data;
struct __gconv_info;

#line 167 "/usr/include/libio.h"
struct _IO_jump_t;

#line 29 "edge_draw.h"
struct _IO_marker;
struct _IO_FILE;

#line 341 "/usr/include/libio.h"
struct _IO_FILE_plus;

// named enumerator type definitions /////////////////////////////////

#line 203 "/usr/include/libio.h"
enum __codecvt_result {

    __codecvt_ok=0,
    __codecvt_partial=1,
    __codecvt_error=2,
    __codecvt_noconv=3
};

// unnamed enumerator type definitions ///////////////////////////////

#line 38 "/usr/include/gconv.h"
enum {
    __GCONV_OK=0,
    __GCONV_NOCONV=1,
    __GCONV_NODB=2,
    __GCONV_NOMEM=3,

    __GCONV_EMPTY_INPUT=4,
    __GCONV_FULL_OUTPUT=5,
    __GCONV_ILLEGAL_INPUT=6,
    __GCONV_INCOMPLETE_INPUT=7,

    __GCONV_ILLEGAL_DESCRIPTOR=8,
    __GCONV_INTERNAL_ERROR=9
};




enum {
    __GCONV_IS_LAST=1,
    __GCONV_IGNORE_ERRORS=2
};

// struct/union type definitions /////////////////////////////////////

#line 77 "/usr/include/wchar.h"
typedef struct {
    int __count;




    union { unsigned int __wch; char __wchb[4]; } __value; }
    __mbstate_t;

#line 27 "/usr/include/_G_config.h"
typedef struct {
    long int __pos;
    __mbstate_t __state; }
    _G_fpos_t;

#line 63 "/usr/include/bits/types.h"
typedef struct {
    long int __val[2]; }
    __quad_t;

#line 32 "/usr/include/_G_config.h"
typedef struct {
    __quad_t __pos;
    __mbstate_t __state; }
    _G_fpos64_t;

#line 145 "/usr/include/gconv.h"
struct __gconv_step_data {

    unsigned char *__outbuf;
    unsigned char *__outbufend;



    int __flags;



    int __invocation_counter;



    int __internal_use;

    __mbstate_t *__statep;
    __mbstate_t __state;



    struct __gconv_trans_data *__trans;
};



struct __gconv_info {

    unsigned int __nsteps;
    struct __gconv_step *__steps;
    struct __gconv_step_data __data[1];
};

#line 46 "/usr/include/_G_config.h"
typedef union {
    struct __gconv_info __cd;




    struct { struct __gconv_info __cd; struct __gconv_step_data __data; } __combined; }
    _G_iconv_t;

#line 67 "/usr/include/bits/types.h"
typedef struct {
    unsigned long int __val[2]; }
    __u_quad_t;

#line 147 "/usr/include/bits/types.h"
typedef struct { int __val[2]; } __fsid_t;

#line 103 "/usr/include/gconv.h"
struct __gconv_trans_data {


    int (*__trans_fct)(struct __gconv_step *, struct __gconv_step_data *, void *, const unsigned char *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *);
    int (*__trans_context_fct)(void *, const unsigned char *, const unsigned char *, unsigned char *, unsigned char *);
    void (*__trans_end_fct)(void *);
    void *__data;
    struct __gconv_trans_data *__next;
};



struct __gconv_step {

    struct __gconv_loaded_object *__shlib_handle;
    const char *__modname;

    int __counter;

    char *__from_name;
    char *__to_name;

    int (*__fct)(struct __gconv_step *, struct __gconv_step_data *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *, int, int);
    unsigned int (*__btowc_fct)(struct __gconv_step *, unsigned char);
    int (*__init_fct)(struct __gconv_step *);
    void (*__end_fct)(struct __gconv_step *);



    int __min_needed_from;
    int __max_needed_from;
    int __min_needed_to;
    int __max_needed_to;


    int __stateful;

    void *__data;
};

#line 183 "/usr/include/libio.h"
struct _IO_marker {
    struct _IO_marker *_next;
    struct _IO_FILE *_sbuf;



    int _pos;
};

#line 268 "/usr/include/libio.h"
struct _IO_FILE {
    int _flags;




    char *_IO_read_ptr;
    char *_IO_read_end;
    char *_IO_read_base;
    char *_IO_write_base;
    char *_IO_write_ptr;
    char *_IO_write_end;
    char *_IO_buf_base;
    char *_IO_buf_end;

    char *_IO_save_base;
    char *_IO_backup_base;
    char *_IO_save_end;

    struct _IO_marker *_markers;

    struct _IO_FILE *_chain;

    int _fileno;



    int _flags2;

    long int _old_offset;



    unsigned short int _cur_column;
    char _vtable_offset;
    char _shortbuf[1];



    void *_lock;

#line 316 "/usr/include/libio.h"
    __quad_t _offset;

#line 325 "/usr/include/libio.h"
    void *__pad1;
    void *__pad2;
    void *__pad3;
    void *__pad4;
    unsigned int __pad5;

    int _mode;

    char _unused2[40];
};

// type synonym definitions //////////////////////////////////////////

#line 55 "/usr/include/_G_config.h"
typedef int _G_int16_t;
typedef int _G_int32_t;
typedef unsigned int _G_uint16_t;
typedef unsigned int _G_uint32_t;

#line 34 "/usr/include/bits/types.h"
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef char __int8_t;
typedef unsigned char __uint8_t;
typedef short int __int16_t;
typedef unsigned short int __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;

#line 138 "/usr/include/bits/types.h"
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;

typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long int __off_t;

typedef int __pid_t;

typedef long int __clock_t;
typedef unsigned long int __rlim_t;

typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef long int __swblk_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void *__timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;



typedef unsigned long int __fsblkcnt_t;



typedef unsigned long int __fsfilcnt_t;


typedef int __ssize_t;




typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef int __intptr_t;


typedef unsigned int __socklen_t;

#line 70 "/usr/include/gconv.h"
typedef int (*__gconv_fct)(struct __gconv_step *, struct __gconv_step_data *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *, int, int);




typedef unsigned int (*__gconv_btowc_fct)(struct __gconv_step *, unsigned char);


typedef int (*__gconv_init_fct)(struct __gconv_step *);
typedef void (*__gconv_end_fct)(struct __gconv_step *);



typedef int (*__gconv_trans_fct)(struct __gconv_step *, struct __gconv_step_data *, void *, const unsigned char *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *);

#line 91 "/usr/include/gconv.h"
typedef int (*__gconv_trans_context_fct)(void *, const unsigned char *, const unsigned char *, unsigned char *, unsigned char *);




typedef int (*__gconv_trans_query_fct)(const char *, const char ***, unsigned int *);



typedef int (*__gconv_trans_init_fct)(void **, const char *);
typedef void (*__gconv_trans_end_fct)(void *);

#line 177 "/usr/include/gconv.h"
typedef struct __gconv_info *__gconv_t;

#line 177 "/usr/include/libio.h"
typedef void _IO_lock_t;

#line 338 "/usr/include/libio.h"
typedef struct _IO_FILE _IO_FILE;

#line 361 "/usr/include/libio.h"
typedef int __io_read_fn(void *, char *, unsigned int);

#line 369 "/usr/include/libio.h"
typedef int __io_write_fn(void *, const char *, unsigned int);

#line 378 "/usr/include/libio.h"
typedef int __io_seek_fn(void *, __quad_t *, int);


typedef int __io_close_fn(void *);

#line 46 "/usr/include/stdio.h"
typedef struct _IO_FILE FILE;

#line 62 "/usr/include/stdio.h"
typedef struct _IO_FILE __FILE;

#line 43 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stdarg.h"
typedef void *__gnuc_va_list;

#line 213 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stddef.h"
typedef unsigned int size_t;

#line 354 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stddef.h"
typedef unsigned int wint_t;

#line 5 "edge_draw.sc"
typedef unsigned char uchar;

// class declarations ////////////////////////////////////////////////

#line 415 "edge_draw.h"
class c_queue;

#line 77 "c_queue.sc"
/* note c_queue._SCE_STANDARD_LIB = { "c_queue" }; */

#line 421 "edge_draw.h"
class EdgeDraw;
class i_receiver;

#line 25 "i_receiver.sc"
/* note i_receiver._SCE_STANDARD_LIB = { "i_receiver" }; */

#line 428 "edge_draw.h"
class i_sender;

#line 26 "i_sender.sc"
/* note i_sender._SCE_STANDARD_LIB = { "i_sender" }; */

#line 434 "edge_draw.h"
class i_tranceiver;

#line 27 "i_tranceiver.sc"
/* note i_tranceiver._SCE_STANDARD_LIB = { "i_tranceiver" }; */

// interface class definitions ///////////////////////////////////////

#line 23 "i_receiver.sc"
class i_receiver
{
private:
public:

#line 448 "edge_draw.h"
    virtual ~i_receiver(void){};

#line 27 "i_receiver.sc"
    virtual void receive(void *, unsigned long int) = 0;
private:
};

#line 24 "i_sender.sc"
class i_sender
{
private:
public:

#line 462 "edge_draw.h"
    virtual ~i_sender(void){};

#line 28 "i_sender.sc"
    virtual void send(const void *, unsigned long int) = 0;
private:
};

#line 25 "i_tranceiver.sc"
class i_tranceiver
{
private:
public:

#line 476 "edge_draw.h"
    virtual ~i_tranceiver(void){};

#line 30 "i_tranceiver.sc"
    virtual void receive(void *, unsigned long int) = 0;

#line 29 "i_tranceiver.sc"
    virtual void send(const void *, unsigned long int) = 0;
private:
};

// behavior and channel class definitions ////////////////////////////

#line 74 "c_queue.sc"
class c_queue : public _specc::channel, public i_sender, public i_receiver, public i_tranceiver
{
private:

#line 74 "c_queue.sc"
    const unsigned long int (&size);
public:

#line 498 "edge_draw.h"
    c_queue(const unsigned long int (&size));
    virtual ~c_queue(void);
    void cleanup(void);
    void receive(void *, unsigned long int);
    void send(const void *, unsigned long int);
    void setup(void);
private:

#line 85 "c_queue.sc"
    char *buffer;

#line 84 "c_queue.sc"
    unsigned long int n;

#line 83 "c_queue.sc"
    unsigned long int p;

#line 79 "c_queue.sc"
    _specc::event r;
    _specc::event s;
    unsigned long int wr;
    unsigned long int ws;
};

#line 8 "edge_draw.sc"
class EdgeDraw : public _specc::behavior
{
private:

#line 8 "edge_draw.sc"
    i_receiver (&Portin); i_sender (&Portout);
public:

#line 532 "edge_draw.h"
    EdgeDraw(unsigned int _idcnt, i_receiver (&Portin), i_sender (&Portout));
    virtual ~EdgeDraw(void);
    void main(void);
private:
};

// variable and function declarations ////////////////////////////////

#line 27 "/usr/include/bits/sys_errlist.h"
extern int sys_nerr;
extern const char *const sys_errlist[];

#line 343 "/usr/include/libio.h"
extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;

#line 413 "/usr/include/libio.h"
extern "C" int __underflow(struct _IO_FILE *);
extern "C" int __uflow(struct _IO_FILE *);
extern "C" int __overflow(struct _IO_FILE *, int);
extern "C" unsigned int __wunderflow(struct _IO_FILE *);
extern "C" unsigned int __wuflow(struct _IO_FILE *);
extern "C" unsigned int __woverflow(struct _IO_FILE *, unsigned int);

#line 451 "/usr/include/libio.h"
extern "C" int _IO_getc(struct _IO_FILE *);
extern "C" int _IO_putc(int, struct _IO_FILE *);
extern "C" int _IO_feof(struct _IO_FILE *);
extern "C" int _IO_ferror(struct _IO_FILE *);

extern "C" int _IO_peekc_locked(struct _IO_FILE *);

#line 462 "/usr/include/libio.h"
extern "C" void _IO_flockfile(struct _IO_FILE *);
extern "C" void _IO_funlockfile(struct _IO_FILE *);
extern "C" int _IO_ftrylockfile(struct _IO_FILE *);

#line 481 "/usr/include/libio.h"
extern "C" int _IO_vfscanf(struct _IO_FILE *, const char *, void *, int *);

extern "C" int _IO_vfprintf(struct _IO_FILE *, const char *, void *);

extern "C" int _IO_padn(struct _IO_FILE *, int, int);
extern "C" unsigned int _IO_sgetn(struct _IO_FILE *, void *, unsigned int);

extern "C" __quad_t _IO_seekoff(struct _IO_FILE *, __quad_t, int, int);
extern "C" __quad_t _IO_seekpos(struct _IO_FILE *, __quad_t, int);

extern "C" void _IO_free_backup_area(struct _IO_FILE *);

#line 142 "/usr/include/stdio.h"
extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;

#line 154 "/usr/include/stdio.h"
extern "C" int remove(const char *);

extern "C" int rename(const char *, const char *);

#line 171 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *tmpfile(void);

#line 185 "/usr/include/stdio.h"
extern "C" char *tmpnam(char *);

#line 191 "/usr/include/stdio.h"
extern "C" char *tmpnam_r(char *);

#line 203 "/usr/include/stdio.h"
extern "C" char *tempnam(const char *, const char *);

#line 213 "/usr/include/stdio.h"
extern "C" int fclose(struct _IO_FILE *);




extern "C" int fflush(struct _IO_FILE *);

#line 228 "/usr/include/stdio.h"
extern "C" int fflush_unlocked(struct _IO_FILE *);

#line 248 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fopen(const char *, const char *);

#line 254 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *freopen(const char *, const char *, struct _IO_FILE *);

#line 280 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fdopen(int, const char *);

#line 303 "/usr/include/stdio.h"
extern "C" void setbuf(struct _IO_FILE *, char *);



extern "C" int setvbuf(struct _IO_FILE *, char *, int, unsigned int);

#line 314 "/usr/include/stdio.h"
extern "C" void setbuffer(struct _IO_FILE *, char *, unsigned int);



extern "C" void setlinebuf(struct _IO_FILE *);

#line 327 "/usr/include/stdio.h"
extern "C" int fprintf(struct _IO_FILE *, const char *, ...);

#line 333 "/usr/include/stdio.h"
extern "C" int printf(const char *, ...);

extern "C" int sprintf(char *, const char *, ...);

#line 342 "/usr/include/stdio.h"
extern "C" int vfprintf(struct _IO_FILE *, const char *, void *);

#line 348 "/usr/include/stdio.h"
extern "C" int vprintf(const char *, void *);

extern "C" int vsprintf(char *, const char *, void *);

#line 357 "/usr/include/stdio.h"
extern "C" int snprintf(char *, unsigned int, const char *, ...);



extern "C" int vsnprintf(char *, unsigned int, const char *, void *);

#line 399 "/usr/include/stdio.h"
extern "C" int fscanf(struct _IO_FILE *, const char *, ...);

#line 405 "/usr/include/stdio.h"
extern "C" int scanf(const char *, ...);

extern "C" int sscanf(const char *, const char *, ...);

#line 441 "/usr/include/stdio.h"
extern "C" int fgetc(struct _IO_FILE *);
extern "C" int getc(struct _IO_FILE *);

#line 448 "/usr/include/stdio.h"
extern "C" int getchar(void);

#line 460 "/usr/include/stdio.h"
extern "C" int getc_unlocked(struct _IO_FILE *);
extern "C" int getchar_unlocked(void);

#line 471 "/usr/include/stdio.h"
extern "C" int fgetc_unlocked(struct _IO_FILE *);

#line 483 "/usr/include/stdio.h"
extern "C" int fputc(int, struct _IO_FILE *);
extern "C" int putc(int, struct _IO_FILE *);

#line 490 "/usr/include/stdio.h"
extern "C" int putchar(int);

#line 504 "/usr/include/stdio.h"
extern "C" int fputc_unlocked(int, struct _IO_FILE *);

#line 512 "/usr/include/stdio.h"
extern "C" int putc_unlocked(int, struct _IO_FILE *);
extern "C" int putchar_unlocked(int);

#line 520 "/usr/include/stdio.h"
extern "C" int getw(struct _IO_FILE *);


extern "C" int putw(int, struct _IO_FILE *);

#line 532 "/usr/include/stdio.h"
extern "C" char *fgets(char *, int, struct _IO_FILE *);

#line 540 "/usr/include/stdio.h"
extern "C" char *gets(char *);

#line 590 "/usr/include/stdio.h"
extern "C" int fputs(const char *, struct _IO_FILE *);

#line 596 "/usr/include/stdio.h"
extern "C" int puts(const char *);

#line 603 "/usr/include/stdio.h"
extern "C" int ungetc(int, struct _IO_FILE *);

#line 610 "/usr/include/stdio.h"
extern "C" unsigned int fread(void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 616 "/usr/include/stdio.h"
extern "C" unsigned int fwrite(const void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 638 "/usr/include/stdio.h"
extern "C" unsigned int fread_unlocked(void *, unsigned int, unsigned int, struct _IO_FILE *);

extern "C" unsigned int fwrite_unlocked(const void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 650 "/usr/include/stdio.h"
extern "C" int fseek(struct _IO_FILE *, long int, int);




extern "C" long int ftell(struct _IO_FILE *);




extern "C" void rewind(struct _IO_FILE *);

#line 674 "/usr/include/stdio.h"
extern "C" int fseeko(struct _IO_FILE *, long int, int);




extern "C" long int ftello(struct _IO_FILE *);

#line 699 "/usr/include/stdio.h"
extern "C" int fgetpos(struct _IO_FILE *, _G_fpos_t *);




extern "C" int fsetpos(struct _IO_FILE *, const _G_fpos_t *);

#line 727 "/usr/include/stdio.h"
extern "C" void clearerr(struct _IO_FILE *);

extern "C" int feof(struct _IO_FILE *);

extern "C" int ferror(struct _IO_FILE *);




extern "C" void clearerr_unlocked(struct _IO_FILE *);
extern "C" int feof_unlocked(struct _IO_FILE *);
extern "C" int ferror_unlocked(struct _IO_FILE *);

#line 747 "/usr/include/stdio.h"
extern "C" void perror(const char *);

#line 759 "/usr/include/stdio.h"
extern "C" int fileno(struct _IO_FILE *);




extern "C" int fileno_unlocked(struct _IO_FILE *);

#line 774 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *popen(const char *, const char *);

#line 780 "/usr/include/stdio.h"
extern "C" int pclose(struct _IO_FILE *);

#line 786 "/usr/include/stdio.h"
extern "C" char *ctermid(char *);

#line 814 "/usr/include/stdio.h"
extern "C" void flockfile(struct _IO_FILE *);



extern "C" int ftrylockfile(struct _IO_FILE *);


extern "C" void funlockfile(struct _IO_FILE *);

#line 38 "/usr/include/string.h"
extern "C" void *memcpy(void *, const void *, unsigned int);




extern "C" void *memmove(void *, const void *, unsigned int);

#line 51 "/usr/include/string.h"
extern "C" void *memccpy(void *, const void *, int, unsigned int);

#line 59 "/usr/include/string.h"
extern "C" void *memset(void *, int, unsigned int);


extern "C" int memcmp(const void *, const void *, unsigned int);



extern "C" void *memchr(const void *, int, unsigned int);

#line 84 "/usr/include/string.h"
extern "C" char *strcpy(char *, const char *);


extern "C" char *strncpy(char *, const char *, unsigned int);




extern "C" char *strcat(char *, const char *);


extern "C" char *strncat(char *, const char *, unsigned int);



extern "C" int strcmp(const char *, const char *);


extern "C" int strncmp(const char *, const char *, unsigned int);



extern "C" int strcoll(const char *, const char *);


extern "C" unsigned int strxfrm(char *, const char *, unsigned int);

#line 130 "/usr/include/string.h"
extern "C" char *strdup(const char *);

#line 167 "/usr/include/string.h"
extern "C" char *strchr(const char *, int);


extern "C" char *strrchr(const char *, int);

#line 184 "/usr/include/string.h"
extern "C" unsigned int strcspn(const char *, const char *);



extern "C" unsigned int strspn(const char *, const char *);


extern "C" char *strpbrk(const char *, const char *);


extern "C" char *strstr(const char *, const char *);




extern "C" char *strtok(char *, const char *);

#line 205 "/usr/include/string.h"
extern "C" char *__strtok_r(char *, const char *, char **);




extern "C" char *strtok_r(char *, const char *, char **);

#line 242 "/usr/include/string.h"
extern "C" unsigned int strlen(const char *);

#line 256 "/usr/include/string.h"
extern "C" char *strerror(int);

#line 274 "/usr/include/string.h"
extern "C" int __xpg_strerror_r(int, char *, unsigned int);

#line 288 "/usr/include/string.h"
extern "C" void __bzero(void *, unsigned int);



extern "C" void bcopy(const void *, void *, unsigned int);



extern "C" void bzero(void *, unsigned int);


extern "C" int bcmp(const void *, const void *, unsigned int);



extern "C" char *index(const char *, int);



extern "C" char *rindex(const char *, int);




extern "C" int ffs(int);

#line 325 "/usr/include/string.h"
extern "C" int strcasecmp(const char *, const char *);



extern "C" int strncasecmp(const char *, const char *, unsigned int);

#line 348 "/usr/include/string.h"
extern "C" char *strsep(char **, const char *);

#line 64 "c_queue.sc"
extern "C" void abort(void);
extern "C" void *malloc(unsigned int);
extern "C" void free(void *);

#line 939 "edge_draw.h"
void _scc_bit4_err_handle(const _bit4&);

//////////////////////////////////////////////////////////////////////
// End of file edge_draw.h
//////////////////////////////////////////////////////////////////////
